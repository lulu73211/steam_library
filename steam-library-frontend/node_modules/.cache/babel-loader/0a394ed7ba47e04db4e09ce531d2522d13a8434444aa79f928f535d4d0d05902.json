{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"steam-container\"\n};\nconst _hoisted_2 = {\n  class: \"game-list\"\n};\nconst _hoisted_3 = {\n  class: \"game-details\"\n};\nconst _hoisted_4 = {\n  class: \"game-title\"\n};\nconst _hoisted_5 = {\n  class: \"game-genre\"\n};\nconst _hoisted_6 = {\n  class: \"game-actions\"\n};\nconst _hoisted_7 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h1\", {\n    class: \"steam-header\"\n  }, \"Ma Bibliothèque de Jeux\", -1 /* HOISTED */)), _createElementVNode(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.games, game => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"game-item\",\n      key: game._id\n    }, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"strong\", _hoisted_4, _toDisplayString(game.title), 1 /* TEXT */), _cache[0] || (_cache[0] = _createTextVNode(\" - \")), _createElementVNode(\"span\", _hoisted_5, _toDisplayString(game.genre), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_6, [_createVNode(_component_router_link, {\n      to: '/edit/' + game._id\n    }, {\n      default: _withCtx(() => [...(_cache[1] || (_cache[1] = [_createElementVNode(\"button\", {\n        class: \"steam-button\"\n      }, \"Modifier\", -1 /* HOISTED */)]))]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"to\"]), _createElementVNode(\"button\", {\n      class: \"steam-button delete-button\",\n      onClick: $event => $options.deleteGame(game._id)\n    }, \"Supprimer\", 8 /* PROPS */, _hoisted_7)])]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createVNode(_component_router_link, {\n    to: \"/add\"\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createElementVNode(\"button\", {\n      class: \"steam-button add-button\"\n    }, \"Ajouter un Jeu\", -1 /* HOISTED */)])),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_Fragment","_renderList","$data","games","game","key","_id","_hoisted_3","_hoisted_4","_toDisplayString","title","_createTextVNode","_hoisted_5","genre","_hoisted_6","_createVNode","_component_router_link","to","default","_withCtx","_cache","_","onClick","$event","$options","deleteGame","_hoisted_7"],"sources":["/Users/lucaslabeye/Documents/EFREI/steam-library/steam-library-frontend/src/components/GameList.vue"],"sourcesContent":["<template>\n  <div class=\"steam-container\">\n    <h1 class=\"steam-header\">Ma Bibliothèque de Jeux</h1>\n    <ul class=\"game-list\">\n      <li class=\"game-item\" v-for=\"game in games\" :key=\"game._id\">\n        <div class=\"game-details\">\n          <strong class=\"game-title\">{{ game.title }}</strong> - <span class=\"game-genre\">{{ game.genre }}</span>\n        </div>\n        <div class=\"game-actions\">\n          <router-link :to=\"'/edit/' + game._id\">\n            <button class=\"steam-button\">Modifier</button>\n          </router-link>\n          <button class=\"steam-button delete-button\" @click=\"deleteGame(game._id)\">Supprimer</button>\n        </div>\n      </li>\n    </ul>\n\n    <router-link to=\"/add\">\n      <button class=\"steam-button add-button\">Ajouter un Jeu</button>\n    </router-link>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      games: []\n    };\n  },\n  created() {\n    this.fetchGames();\n  },\n  methods: {\n    async fetchGames() {\n      try {\n        const response = await fetch('http://localhost:3000/games');\n        this.games = await response.json();\n      } catch (error) {\n        console.error('Erreur lors de la récupération des jeux :', error);\n      }\n    },\n    async deleteGame(id) {\n      if (!confirm(\"Voulez-vous vraiment supprimer ce jeu ?\")) {\n        return;\n      }\n      try {\n        const response = await fetch(`http://localhost:3000/games/${id}`, {\n          method: 'DELETE'\n        });\n        if (response.ok) {\n          this.fetchGames(); // Rafraîchir la liste des jeux après suppression\n        } else {\n          console.error('Erreur lors de la suppression du jeu');\n        }\n      } catch (error) {\n        console.error('Erreur lors de la suppression du jeu :', error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Styles globaux pour ressembler à Steam */\n.steam-container {\n  background-color: #1b2838; /* Fond bleu foncé */\n  color: #c7d5e0; /* Texte gris clair */\n  padding: 20px;\n  border-radius: 8px;\n  max-width: 800px;\n  margin: auto;\n}\n\n.steam-header {\n  color: #FFFFFF; /* Titre en blanc */\n  font-size: 2em;\n  font-family: 'Roboto', sans-serif;\n  margin-bottom: 20px;\n}\n\n.game-list {\n  list-style-type: none;\n  padding: 0;\n}\n\n.game-item {\n  background-color: #2a475e; /* Gris foncé */\n  margin-bottom: 10px;\n  padding: 15px;\n  border-radius: 5px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.game-details {\n  color: #c7d5e0;\n  font-size: 1.2em;\n  font-family: 'Roboto', sans-serif;\n}\n\n.game-title {\n  font-weight: bold;\n}\n\n.steam-button {\n  background-color: #5c7e10; /* Boutons dans les tons verts/bleus */\n  border: none;\n  color: white;\n  padding: 10px 15px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-family: 'Roboto', sans-serif;\n}\n\n.steam-button:hover {\n  background-color: #74a52f; /* Survol légèrement plus clair */\n}\n\n.delete-button {\n  background-color: #a83232; /* Couleur du bouton Supprimer */\n}\n\n.delete-button:hover {\n  background-color: #d9534f; /* Survol bouton Supprimer */\n}\n\n.add-button {\n  display: block;\n  width: 100%;\n  margin-top: 20px;\n  text-align: center;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EAEtBA,KAAK,EAAC;AAAW;;EAEZA,KAAK,EAAC;AAAc;;EACfA,KAAK,EAAC;AAAY;;EAAmCA,KAAK,EAAC;AAAY;;EAE5EA,KAAK,EAAC;AAAc;mBARjC;;;uBACEC,mBAAA,CAmBM,OAnBNC,UAmBM,G,0BAlBJC,mBAAA,CAAqD;IAAjDH,KAAK,EAAC;EAAc,GAAC,yBAAuB,sBAChDG,mBAAA,CAYK,MAZLC,UAYK,I,kBAXHH,mBAAA,CAUKI,SAAA,QAdXC,WAAA,CAI2CC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAjCR,mBAAA,CAUK;MAVDD,KAAK,EAAC,WAAW;MAAwBU,GAAG,EAAED,IAAI,CAACE;QACrDR,mBAAA,CAEM,OAFNS,UAEM,GADJT,mBAAA,CAAoD,UAApDU,UAAoD,EAAAC,gBAAA,CAAtBL,IAAI,CAACM,KAAK,kB,0BANlDC,gBAAA,CAM8D,KAAG,IAAAb,mBAAA,CAAgD,QAAhDc,UAAgD,EAAAH,gBAAA,CAApBL,IAAI,CAACS,KAAK,iB,GAE/Ff,mBAAA,CAKM,OALNgB,UAKM,GAJJC,YAAA,CAEcC,sBAAA;MAFAC,EAAE,aAAab,IAAI,CAACE;;MAT5CY,OAAA,EAAAC,QAAA,CAUY,MAA8C,KAAAC,MAAA,QAAAA,MAAA,OAA9CtB,mBAAA,CAA8C;QAAtCH,KAAK,EAAC;MAAc,GAAC,UAAQ,oB;MAVjD0B,CAAA;iDAYUvB,mBAAA,CAA2F;MAAnFH,KAAK,EAAC,4BAA4B;MAAE2B,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACrB,IAAI,CAACE,GAAG;OAAG,WAAS,iBAZ5FoB,UAAA,E;oCAiBIX,YAAA,CAEcC,sBAAA;IAFDC,EAAE,EAAC;EAAM;IAjB1BC,OAAA,EAAAC,QAAA,CAkBM,MAA+DC,MAAA,QAAAA,MAAA,OAA/DtB,mBAAA,CAA+D;MAAvDH,KAAK,EAAC;IAAyB,GAAC,gBAAc,oB;IAlB5D0B,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}