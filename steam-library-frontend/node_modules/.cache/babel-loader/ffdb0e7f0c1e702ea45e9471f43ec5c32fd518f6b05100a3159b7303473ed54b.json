{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      game: {\n        title: '',\n        genre: '',\n        description: '',\n        releaseDate: ''\n      }\n    };\n  },\n  created() {\n    this.fetchGame();\n  },\n  methods: {\n    async fetchGame() {\n      try {\n        const response = await fetch(`http://localhost:3000/games/${this.$route.params.id}`);\n        this.game = await response.json();\n        // Formater la date pour être compatible avec le champ input type=\"date\"\n        this.game.releaseDate = this.game.releaseDate.slice(0, 10);\n      } catch (error) {\n        console.error('Erreur lors de la récupération du jeu :', error);\n      }\n    },\n    async updateGame() {\n      try {\n        const response = await fetch(`http://localhost:3000/games/${this.$route.params.id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(this.game)\n        });\n        if (!response.ok) {\n          throw new Error(`Erreur lors de la modification du jeu : ${response.statusText}`);\n        }\n        // Redirection vers la liste des jeux après la modification\n        this.$router.push('/');\n      } catch (error) {\n        console.error('Erreur lors de la modification du jeu :', error);\n      }\n    },\n    goBack() {\n      this.$router.push('/');\n    }\n  }\n};","map":{"version":3,"names":["data","game","title","genre","description","releaseDate","created","fetchGame","methods","response","fetch","$route","params","id","json","slice","error","console","updateGame","method","headers","body","JSON","stringify","ok","Error","statusText","$router","push","goBack"],"sources":["/Users/lucaslabeye/Documents/EFREI/steam-library/steam-library-frontend/src/components/EditGame.vue"],"sourcesContent":["<template>\n    <div class=\"steam-container\">\n      <h1 class=\"steam-header\">Modifier un Jeu</h1>\n      <form @submit.prevent=\"updateGame\">\n        <div class=\"form-group\">\n          <label>Titre du Jeu:</label>\n          <input class=\"steam-input\" v-model=\"game.title\" required />\n        </div>\n        <div class=\"form-group\">\n          <label>Genre:</label>\n          <input class=\"steam-input\" v-model=\"game.genre\" required />\n        </div>\n        <div class=\"form-group\">\n          <label>Description:</label>\n          <textarea class=\"steam-input\" v-model=\"game.description\"></textarea>\n        </div>\n        <div class=\"form-group\">\n          <label>Date de Sortie:</label>\n          <input class=\"steam-input\" v-model=\"game.releaseDate\" type=\"date\" required />\n        </div>\n        <button type=\"submit\" class=\"steam-button\">Modifier</button>\n        <button type=\"button\" class=\"steam-button\" @click=\"goBack\">Retour</button>\n      </form>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        game: {\n          title: '',\n          genre: '',\n          description: '',\n          releaseDate: ''\n        }\n      };\n    },\n    created() {\n      this.fetchGame();\n    },\n    methods: {\n      async fetchGame() {\n        try {\n          const response = await fetch(`http://localhost:3000/games/${this.$route.params.id}`);\n          this.game = await response.json();\n          // Formater la date pour être compatible avec le champ input type=\"date\"\n          this.game.releaseDate = this.game.releaseDate.slice(0, 10);\n        } catch (error) {\n          console.error('Erreur lors de la récupération du jeu :', error);\n        }\n      },\n      async updateGame() {\n        try {\n          const response = await fetch(`http://localhost:3000/games/${this.$route.params.id}`, {\n            method: 'PUT',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(this.game)\n          });\n          if (!response.ok) {\n            throw new Error(`Erreur lors de la modification du jeu : ${response.statusText}`);\n          }\n          // Redirection vers la liste des jeux après la modification\n          this.$router.push('/');\n        } catch (error) {\n          console.error('Erreur lors de la modification du jeu :', error);\n        }\n      },\n      goBack() {\n        this.$router.push('/');\n      }\n    }\n  };\n  </script>\n  \n  <style scoped>\n  /* Applique le style Steam au formulaire */\n  .steam-container {\n    background-color: #1b2838;\n    color: #c7d5e0;\n    padding: 20px;\n    border-radius: 8px;\n    max-width: 800px;\n    margin: auto;\n  }\n  \n  .steam-header {\n    color: #FFFFFF;\n    font-size: 2em;\n    font-family: 'Roboto', sans-serif;\n    margin-bottom: 20px;\n  }\n  \n  .form-group {\n    margin-bottom: 15px;\n  }\n  \n  .steam-input {\n    width: 100%;\n    padding: 10px;\n    margin-top: 5px;\n    border: 1px solid #c7d5e0;\n    border-radius: 4px;\n    background-color: #2a475e;\n    color: white;\n    font-family: 'Roboto', sans-serif;\n  }\n  \n  .steam-button {\n    background-color: #5c7e10;\n    border: none;\n    color: white;\n    padding: 10px 15px;\n    text-align: center;\n    display: inline-block;\n    font-size: 16px;\n    border-radius: 4px;\n    cursor: pointer;\n    font-family: 'Roboto', sans-serif;\n  }\n  \n  .steam-button:hover {\n    background-color: #74a52f;\n  }\n  \n  button + button {\n    margin-left: 10px;\n  }\n  </style>\n  "],"mappings":";AA2BE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;QACJC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,WAAW,EAAE,EAAE;QACfC,WAAW,EAAE;MACf;IACF,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC,CAAC;EAClB,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,SAASA,CAAA,EAAG;MAChB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMC,KAAK,CAAC,+BAA+B,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,EAAE,CAAC;QACpF,IAAI,CAACZ,IAAG,GAAI,MAAMQ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACjC;QACA,IAAI,CAACb,IAAI,CAACI,WAAU,GAAI,IAAI,CAACJ,IAAI,CAACI,WAAW,CAACU,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;MAC5D,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MACjE;IACF,CAAC;IACD,MAAME,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMT,QAAO,GAAI,MAAMC,KAAK,CAAC,+BAA+B,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,EAAE,EAAE;UACnFM,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACtB,IAAI;QAChC,CAAC,CAAC;QACF,IAAI,CAACQ,QAAQ,CAACe,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,2CAA2ChB,QAAQ,CAACiB,UAAU,EAAE,CAAC;QACnF;QACA;QACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;MACxB,EAAE,OAAOZ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MACjE;IACF,CAAC;IACDa,MAAMA,CAAA,EAAG;MACP,IAAI,CAACF,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;IACxB;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}