{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", null, \"Ma Bibliothèque de Jeux\", -1 /* HOISTED */)), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.games, game => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: game._id\n    }, [_createElementVNode(\"strong\", null, _toDisplayString(game.title), 1 /* TEXT */), _createTextVNode(\" - \" + _toDisplayString(game.genre) + \" \", 1 /* TEXT */), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteGame(game._id)\n    }, \"Supprimer\", 8 /* PROPS */, _hoisted_1)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createVNode(_component_router_link, {\n    to: \"/add\"\n  }, {\n    default: _withCtx(() => _cache[0] || (_cache[0] = [_createElementVNode(\"button\", null, \"Ajouter un Jeu\", -1 /* HOISTED */)])),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","$data","games","game","key","_id","_toDisplayString","title","_createTextVNode","genre","onClick","$event","$options","deleteGame","_hoisted_1","_createVNode","_component_router_link","to","default","_withCtx","_cache","_"],"sources":["/Users/lucaslabeye/Documents/EFREI/steam-library/steam-library-frontend/src/components/GameList.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Ma Bibliothèque de Jeux</h1>\n      <ul>\n        <li v-for=\"game in games\" :key=\"game._id\">\n          <strong>{{ game.title }}</strong> - {{ game.genre }}\n          <button @click=\"deleteGame(game._id)\">Supprimer</button>\n        </li>\n      </ul>\n      <router-link to=\"/add\">\n        <button>Ajouter un Jeu</button>\n      </router-link>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        games: [],\n      };\n    },\n    methods: {\n      async fetchGames() {\n        try {\n          const response = await fetch('http://localhost:3000/games');\n          if (!response.ok) {\n            throw new Error(`Erreur HTTP ! statut : ${response.status}`);\n          }\n          const data = await response.json();\n          this.games = data;\n        } catch (error) {\n          console.error('Erreur lors de la récupération des jeux :', error);\n        }\n      },\n      async deleteGame(id) {\n        try {\n          const response = await fetch(`http://localhost:3000/games/${id}`, {\n            method: 'DELETE',\n          });\n          if (!response.ok) {\n            throw new Error(`Erreur HTTP ! statut : ${response.status}`);\n          }\n          this.fetchGames(); // Rafraîchir la liste des jeux\n        } catch (error) {\n          console.error('Erreur lors de la suppression du jeu :', error);\n        }\n      },\n    },\n    created() {\n      this.fetchGames();\n    },\n  };\n  </script>\n  "],"mappings":";mBAAA;;;uBACIA,mBAAA,CAWM,c,0BAVJC,mBAAA,CAAgC,YAA5B,yBAAuB,sBAC3BA,mBAAA,CAKK,c,kBAJHD,mBAAA,CAGKE,SAAA,QAPbC,WAAA,CAI2BC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfN,mBAAA,CAGK;MAHsBO,GAAG,EAAED,IAAI,CAACE;QACnCP,mBAAA,CAAiC,gBAAAQ,gBAAA,CAAtBH,IAAI,CAACI,KAAK,kBAL/BC,gBAAA,CAK2C,KAAG,GAAAF,gBAAA,CAAGH,IAAI,CAACM,KAAK,IAAG,GACpD,iBAAAX,mBAAA,CAAwD;MAA/CY,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,UAAU,CAACV,IAAI,CAACE,GAAG;OAAG,WAAS,iBANzDS,UAAA,E;oCASMC,YAAA,CAEcC,sBAAA;IAFDC,EAAE,EAAC;EAAM;IAT5BC,OAAA,EAAAC,QAAA,CAUQ,MAA+BC,MAAA,QAAAA,MAAA,OAA/BtB,mBAAA,CAA+B,gBAAvB,gBAAc,oB;IAV9BuB,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}