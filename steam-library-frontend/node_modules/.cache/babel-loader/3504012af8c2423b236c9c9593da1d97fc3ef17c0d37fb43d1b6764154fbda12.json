{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_cache[10] || (_cache[10] = _createElementVNode(\"h1\", null, \"Modifier un Jeu\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.updateGame && $options.updateGame(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[5] || (_cache[5] = _createElementVNode(\"label\", null, \"Titre du Jeu:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.game.title = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.game.title]])]), _createElementVNode(\"div\", null, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", null, \"Genre:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.game.genre = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.game.genre]])]), _createElementVNode(\"div\", null, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", null, \"Description:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.game.description = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.game.description]])]), _createElementVNode(\"div\", null, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", null, \"Date de Sortie:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.game.releaseDate = $event),\n    type: \"date\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.game.releaseDate]])]), _cache[9] || (_cache[9] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"Modifier\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","updateGame","$event","$data","game","title","required","genre","description","releaseDate","type"],"sources":["/Users/lucaslabeye/Documents/EFREI/steam-library/steam-library-frontend/src/components/EditGame.vue"],"sourcesContent":["<template>\n    <div>\n      <h1>Modifier un Jeu</h1>\n      <form @submit.prevent=\"updateGame\">\n        <div>\n          <label>Titre du Jeu:</label>\n          <input v-model=\"game.title\" required />\n        </div>\n        <div>\n          <label>Genre:</label>\n          <input v-model=\"game.genre\" required />\n        </div>\n        <div>\n          <label>Description:</label>\n          <textarea v-model=\"game.description\"></textarea>\n        </div>\n        <div>\n          <label>Date de Sortie:</label>\n          <input v-model=\"game.releaseDate\" type=\"date\" required />\n        </div>\n        <button type=\"submit\">Modifier</button>\n      </form>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        game: {\n          title: '',\n          genre: '',\n          description: '',\n          releaseDate: '',\n        },\n      };\n    },\n    created() {\n      this.fetchGame();\n    },\n    methods: {\n      async fetchGame() {\n        const response = await fetch(`http://localhost:3000/games/${this.$route.params.id}`);\n        this.game = await response.json();\n      },\n      async updateGame() {\n        const response = await fetch(`http://localhost:3000/games/${this.$route.params.id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(this.game),\n        });\n        if (response.ok) {\n          this.$router.push('/');\n        } else {\n          console.error('Erreur lors de la modification du jeu');\n        }\n      },\n    },\n  };\n  </script>\n  "],"mappings":";;uBACIA,mBAAA,CAqBM,c,4BApBJC,mBAAA,CAAwB,YAApB,iBAAe,sBACnBA,mBAAA,CAkBO;IAlBAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHnBC,cAAA,KAAAC,IAAA,KAG6BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MAC/BJ,mBAAA,CAGM,c,0BAFJA,mBAAA,CAA4B,eAArB,eAAa,sB,gBACpBA,mBAAA,CAAuC;IANjD,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAM0BC,KAAA,CAAAC,IAAI,CAACC,KAAK,GAAAH,MAAA;IAAEI,QAAQ,EAAR;iDAAZH,KAAA,CAAAC,IAAI,CAACC,KAAK,E,KAE5BV,mBAAA,CAGM,c,0BAFJA,mBAAA,CAAqB,eAAd,QAAM,sB,gBACbA,mBAAA,CAAuC;IAVjD,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAU0BC,KAAA,CAAAC,IAAI,CAACG,KAAK,GAAAL,MAAA;IAAEI,QAAQ,EAAR;iDAAZH,KAAA,CAAAC,IAAI,CAACG,KAAK,E,KAE5BZ,mBAAA,CAGM,c,0BAFJA,mBAAA,CAA2B,eAApB,cAAY,sB,gBACnBA,mBAAA,CAAgD;IAd1D,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAc6BC,KAAA,CAAAC,IAAI,CAACI,WAAW,GAAAN,MAAA;iDAAhBC,KAAA,CAAAC,IAAI,CAACI,WAAW,E,KAErCb,mBAAA,CAGM,c,0BAFJA,mBAAA,CAA8B,eAAvB,iBAAe,sB,gBACtBA,mBAAA,CAAyD;IAlBnE,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAkB0BC,KAAA,CAAAC,IAAI,CAACK,WAAW,GAAAP,MAAA;IAAEQ,IAAI,EAAC,MAAM;IAACJ,QAAQ,EAAR;iDAA9BH,KAAA,CAAAC,IAAI,CAACK,WAAW,E,+BAElCd,mBAAA,CAAuC;IAA/Be,IAAI,EAAC;EAAQ,GAAC,UAAQ,qB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}