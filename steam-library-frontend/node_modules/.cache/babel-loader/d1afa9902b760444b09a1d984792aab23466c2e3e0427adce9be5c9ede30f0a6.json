{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"steam-container\"\n};\nconst _hoisted_2 = {\n  class: \"form-group\"\n};\nconst _hoisted_3 = {\n  class: \"form-group\"\n};\nconst _hoisted_4 = {\n  class: \"form-group\"\n};\nconst _hoisted_5 = {\n  class: \"form-group\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[11] || (_cache[11] = _createElementVNode(\"h1\", {\n    class: \"steam-header\"\n  }, \"Ajouter un Nouveau Jeu\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[5] || (_cache[5] = _withModifiers((...args) => $options.addGame && $options.addGame(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"label\", null, \"Titre du Jeu:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    class: \"steam-input\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.title = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.title]])]), _createElementVNode(\"div\", _hoisted_3, [_cache[7] || (_cache[7] = _createElementVNode(\"label\", null, \"Genre:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    class: \"steam-input\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.genre = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.genre]])]), _createElementVNode(\"div\", _hoisted_4, [_cache[8] || (_cache[8] = _createElementVNode(\"label\", null, \"Description:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"textarea\", {\n    class: \"steam-input\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.description = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.description]])]), _createElementVNode(\"div\", _hoisted_5, [_cache[9] || (_cache[9] = _createElementVNode(\"label\", null, \"Date de Sortie:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    class: \"steam-input\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.releaseDate = $event),\n    type: \"date\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.releaseDate]])]), _cache[10] || (_cache[10] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"steam-button\"\n  }, \"Ajouter\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"steam-button\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.goBack && $options.goBack(...args))\n  }, \"Retour\")], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","addGame","_hoisted_2","$event","$data","title","required","_hoisted_3","genre","_hoisted_4","description","_hoisted_5","releaseDate","type","onClick","goBack"],"sources":["/Users/lucaslabeye/Documents/EFREI/steam-library/steam-library-frontend/src/components/AddGame.vue"],"sourcesContent":["<template>\n  <div class=\"steam-container\">\n    <h1 class=\"steam-header\">Ajouter un Nouveau Jeu</h1>\n    <form @submit.prevent=\"addGame\">\n      <div class=\"form-group\">\n        <label>Titre du Jeu:</label>\n        <input class=\"steam-input\" v-model=\"title\" required />\n      </div>\n      <div class=\"form-group\">\n        <label>Genre:</label>\n        <input class=\"steam-input\" v-model=\"genre\" required />\n      </div>\n      <div class=\"form-group\">\n        <label>Description:</label>\n        <textarea class=\"steam-input\" v-model=\"description\"></textarea>\n      </div>\n      <div class=\"form-group\">\n        <label>Date de Sortie:</label>\n        <input class=\"steam-input\" v-model=\"releaseDate\" type=\"date\" required />\n      </div>\n      <button type=\"submit\" class=\"steam-button\">Ajouter</button>\n      <button type=\"button\" class=\"steam-button\" @click=\"goBack\">Retour</button>\n    </form>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      title: '',\n      genre: '',\n      description: '',\n      releaseDate: ''\n    };\n  },\n  methods: {\n    async addGame() {\n      try {\n        const newGame = {\n          title: this.title,\n          genre: this.genre,\n          description: this.description,\n          releaseDate: this.releaseDate\n        };\n\n        const response = await fetch('http://localhost:3000/games', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(newGame)\n        });\n\n        if (!response.ok) {\n          throw new Error(`Erreur lors de l'ajout du jeu : ${response.statusText}`);\n        }\n\n        // Redirection vers la liste des jeux apr√®s l'ajout\n        this.$router.push('/');\n      } catch (error) {\n        console.error('Erreur lors de l\\'ajout du jeu :', error);\n      }\n    },\n    goBack() {\n      this.$router.push('/');\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* Applique le style Steam au formulaire */\n.steam-container {\n  background-color: #1b2838;\n  color: #c7d5e0;\n  padding: 20px;\n  border-radius: 8px;\n  max-width: 800px;\n  margin: auto;\n}\n\n.steam-header {\n  color: #FFFFFF;\n  font-size: 2em;\n  font-family: 'Roboto', sans-serif;\n  margin-bottom: 20px;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\n.steam-input {\n  width: 100%;\n  padding: 10px;\n  margin-top: 5px;\n  border: 1px solid #c7d5e0;\n  border-radius: 4px;\n  background-color: #2a475e;\n  color: white;\n  font-family: 'Roboto', sans-serif;\n}\n\n.steam-button {\n  background-color: #5c7e10;\n  border: none;\n  color: white;\n  padding: 10px 15px;\n  text-align: center;\n  display: inline-block;\n  font-size: 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-family: 'Roboto', sans-serif;\n}\n\n.steam-button:hover {\n  background-color: #74a52f;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EAGnBA,KAAK,EAAC;AAAY;;EAIlBA,KAAK,EAAC;AAAY;;EAIlBA,KAAK,EAAC;AAAY;;EAIlBA,KAAK,EAAC;AAAY;;uBAf3BC,mBAAA,CAsBM,OAtBNC,UAsBM,G,4BArBJC,mBAAA,CAAoD;IAAhDH,KAAK,EAAC;EAAc,GAAC,wBAAsB,sBAC/CG,mBAAA,CAmBO;IAnBAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHjBC,cAAA,KAAAC,IAAA,KAG2BC,QAAA,CAAAC,OAAA,IAAAD,QAAA,CAAAC,OAAA,IAAAF,IAAA,CAAO;MAC5BJ,mBAAA,CAGM,OAHNO,UAGM,G,0BAFJP,mBAAA,CAA4B,eAArB,eAAa,sB,gBACpBA,mBAAA,CAAsD;IAA/CH,KAAK,EAAC,aAAa;IANlC,uBAAAK,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAM4CC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IAAEG,QAAQ,EAAR;iDAAPF,KAAA,CAAAC,KAAK,E,KAE3CV,mBAAA,CAGM,OAHNY,UAGM,G,0BAFJZ,mBAAA,CAAqB,eAAd,QAAM,sB,gBACbA,mBAAA,CAAsD;IAA/CH,KAAK,EAAC,aAAa;IAVlC,uBAAAK,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAU4CC,KAAA,CAAAI,KAAK,GAAAL,MAAA;IAAEG,QAAQ,EAAR;iDAAPF,KAAA,CAAAI,KAAK,E,KAE3Cb,mBAAA,CAGM,OAHNc,UAGM,G,0BAFJd,mBAAA,CAA2B,eAApB,cAAY,sB,gBACnBA,mBAAA,CAA+D;IAArDH,KAAK,EAAC,aAAa;IAdrC,uBAAAK,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAc+CC,KAAA,CAAAM,WAAW,GAAAP,MAAA;iDAAXC,KAAA,CAAAM,WAAW,E,KAEpDf,mBAAA,CAGM,OAHNgB,UAGM,G,0BAFJhB,mBAAA,CAA8B,eAAvB,iBAAe,sB,gBACtBA,mBAAA,CAAwE;IAAjEH,KAAK,EAAC,aAAa;IAlBlC,uBAAAK,MAAA,QAAAA,MAAA,MAAAM,MAAA,IAkB4CC,KAAA,CAAAQ,WAAW,GAAAT,MAAA;IAAEU,IAAI,EAAC,MAAM;IAACP,QAAQ,EAAR;iDAAzBF,KAAA,CAAAQ,WAAW,E,iCAEjDjB,mBAAA,CAA2D;IAAnDkB,IAAI,EAAC,QAAQ;IAACrB,KAAK,EAAC;KAAe,SAAO,sBAClDG,mBAAA,CAA0E;IAAlEkB,IAAI,EAAC,QAAQ;IAACrB,KAAK,EAAC,cAAc;IAAEsB,OAAK,EAAAjB,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAe,MAAA,IAAAf,QAAA,CAAAe,MAAA,IAAAhB,IAAA,CAAM;KAAE,QAAM,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}